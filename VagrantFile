
# vagrant-ohai (0.1.13)

systems = [
     { # TestServer
          :name => "TestServer",
          :role => "Test",
          :box  =>  "generic/centos8",
          :os   =>  "centos",
          :eth1 => "10.1.1.101",
          :mem => "2048",
          :cpu => "2"
     },
     { # Workstation
     :name => "workstation",
     :role => "workstation",
     :box  =>  "generic/centos8",
     :os   =>  "centos",
     :eth1 => "10.1.1.10",
     :mem => "2048",
     :cpu => "2"
    }                                
]

Vagrant.configure("2") do |config|
     systems.each do |opts|
          config.vm.define opts[:name] do |config|
               
               # Create Servers
               config.vm.box = opts[:box]
               config.vm.box_version = opts[:box_version]
               config.vm.hostname = opts[:name]
               config.vm.network "private_network", ip: opts[:eth1]

               config.vm.provider "virtualbox" do |v|
                    v.name = opts[:name]
                    v.customize ["modifyvm", :id, "--memory", opts[:mem]]
                    v.customize ["modifyvm", :id, "--cpus", opts[:cpu]]
               end

               # ENABLE LOCAL SSH
               # --------------------------
               # To make is easy to ssh to the vagrant created server we copy in the 
               # local id_rsa.pub. This makes it easy to run ansible and other SSH
               # based tools against the servers. 
               if ENV['VAGRANT_ENABLE_LOCAL_SSH']
                    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/vagrantKey.pub" 
                    config.vm.provision "shell", inline: "cat /home/vagrant/.ssh/vagrantKey.pub >> /home/vagrant/.ssh/authorized_keys"
               end 

               # MOUNT DATA TO LOCAL DRIVE
               # --------------------------
               # Keeping data you want to persist between destroy and creates is sometimes necessary
               # Here we mount /data to the path specified in the environment variable. 
               if ENV['VAGRANT_DATA_PATH']
                    config.vm.synced_folder ENV['VAGRANT_DATA_PATH'], "/data"
               end

               # CONFIGURE A WORKSTATION
               # --------------------------
               # Not all of us are lucky enought to work on a Mac or Linux workstation. 
               # Here if the "role" defined is workstation we do some additional "stuff"
               # Additional - Stuff:
               # -- Set the ssh keys:      We should be able to ssh to any server created in this lab from the workstation
               # -- Mount Code Directory:  Its hard to do anything with out code. You "could" git pull it down all the time, but why not mount the local directory
               #                           this assumes the [LOCAL_CODE_DIRECTORY] environment variable is set. 
               # -- Install Ansible:       It is the one true configuration and code told, don't look at me that way, what are you going to use, Chef?
               # -- Install Docker:        One of these day's I'll get around to using crio/containerd
               # -- Install Terraform:     Maybed, just maybe you'll need to build some AWS or VMWare Infrastructure
               # -- Install Terragrunt:    Terraform is always a little better with Terragrunt

               if opts[:role] == "workstation"
                    # Copy in your default private key. 
                    config.vm.provision "file", source: "~/.ssh/id_rsa", destination: "/home/vagrant/.ssh/id_rsa" 

                    # Copy up and run the configuraiton shell scripts. 
                    # Here the path to the scripts is defined as an attribute of the esrver object.
                    # Maybe in the future I'll make it dymanic, but probably not, I'm lazy. 
                    config.vm.provision "shell", path: "WorkstationConfigurations/#{opts[:os]}/basics.sh"
                    config.vm.provision "shell", path: "WorkstationConfigurations/#{opts[:os]}/docker.sh"
                    config.vm.provision "shell", path: "WorkstationConfigurations/#{opts[:os]}/hashi_tools.sh"

                    # Mount your "code" directory
                    if ENV['VAGRANT_CODE_PATH']
                         config.vm.synced_folder ENV['VAGRANT_CODE_PATH'], "/home/vagrant/code"
                    end
               end 
          end
     end
end 